// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// jag_fun
double jag_fun(const double Eps, const double Tau, const arma::vec k, const arma::mat& Y, const arma::vec snp, const arma::mat& R);
RcppExport SEXP JAGUAR_jag_fun(SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP, SEXP snpSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const double >::type Eps(EpsSEXP);
    Rcpp::traits::input_parameter< const double >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type snp(snpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    __result = Rcpp::wrap(jag_fun(Eps, Tau, k, Y, snp, R));
    return __result;
END_RCPP
}
// GENEapply
arma::mat GENEapply(const arma::mat& geno, List Y, const arma::vec Eps, const arma::vec Tau, const arma::vec k, const arma::mat& R, bool display_progress);
RcppExport SEXP JAGUAR_GENEapply(SEXP genoSEXP, SEXP YSEXP, SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP RSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type geno(genoSEXP);
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type Eps(EpsSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    __result = Rcpp::wrap(GENEapply(geno, Y, Eps, Tau, k, R, display_progress));
    return __result;
END_RCPP
}
// rowsumscpp
NumericVector rowsumscpp(NumericMatrix x);
RcppExport SEXP JAGUAR_rowsumscpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    __result = Rcpp::wrap(rowsumscpp(x));
    return __result;
END_RCPP
}
// jagSIM
double jagSIM(double Eps, double Tau, double k, NumericMatrix Y, NumericVector snp);
RcppExport SEXP JAGUAR_jagSIM(SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type Eps(EpsSEXP);
    Rcpp::traits::input_parameter< double >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type snp(snpSEXP);
    __result = Rcpp::wrap(jagSIM(Eps, Tau, k, Y, snp));
    return __result;
END_RCPP
}
// vcSIM
double vcSIM(double Eps, double Tau, double k, NumericMatrix Y, NumericVector snp);
RcppExport SEXP JAGUAR_vcSIM(SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type Eps(EpsSEXP);
    Rcpp::traits::input_parameter< double >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type snp(snpSEXP);
    __result = Rcpp::wrap(vcSIM(Eps, Tau, k, Y, snp));
    return __result;
END_RCPP
}
// cis_eqtl
SEXP cis_eqtl(List SNP, List Y, IntegerMatrix perm_mat, arma::vec Eps, arma::vec Tau, arma::vec k, const arma::mat& R, bool v, bool display_progress);
RcppExport SEXP JAGUAR_cis_eqtl(SEXP SNPSEXP, SEXP YSEXP, SEXP perm_matSEXP, SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP RSEXP, SEXP vSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type SNP(SNPSEXP);
    Rcpp::traits::input_parameter< List >::type Y(YSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type perm_mat(perm_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Eps(EpsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< bool >::type v(vSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    __result = Rcpp::wrap(cis_eqtl(SNP, Y, perm_mat, Eps, Tau, k, R, v, display_progress));
    return __result;
END_RCPP
}
