// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// RowSums
NumericVector RowSums(NumericMatrix x);
RcppExport SEXP JAGUAR_RowSums(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        NumericVector __result = RowSums(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// RowMin
NumericVector RowMin(NumericMatrix x);
RcppExport SEXP JAGUAR_RowMin(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        NumericVector __result = RowMin(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// scoreTest
double scoreTest(double Eps, double Tau, double k, NumericMatrix Y, NumericVector snp);
RcppExport SEXP JAGUAR_scoreTest(SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type Eps(EpsSEXP );
        Rcpp::traits::input_parameter< double >::type Tau(TauSEXP );
        Rcpp::traits::input_parameter< double >::type k(kSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type snp(snpSEXP );
        double __result = scoreTest(Eps, Tau, k, Y, snp);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// snpOUT
NumericVector snpOUT(NumericMatrix geno, double Eps, double Tau, double k, NumericMatrix Y);
RcppExport SEXP JAGUAR_snpOUT(SEXP genoSEXP, SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type geno(genoSEXP );
        Rcpp::traits::input_parameter< double >::type Eps(EpsSEXP );
        Rcpp::traits::input_parameter< double >::type Tau(TauSEXP );
        Rcpp::traits::input_parameter< double >::type k(kSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        NumericVector __result = snpOUT(geno, Eps, Tau, k, Y);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// GENEapply
NumericMatrix GENEapply(NumericMatrix geno, List Y, NumericVector Eps, NumericVector Tau, double k);
RcppExport SEXP JAGUAR_GENEapply(SEXP genoSEXP, SEXP YSEXP, SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type geno(genoSEXP );
        Rcpp::traits::input_parameter< List >::type Y(YSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type Eps(EpsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type Tau(TauSEXP );
        Rcpp::traits::input_parameter< double >::type k(kSEXP );
        NumericMatrix __result = GENEapply(geno, Y, Eps, Tau, k);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// gamma_test
double gamma_test(double Eps, double Tau, double k, NumericMatrix Y, NumericVector snp);
RcppExport SEXP JAGUAR_gamma_test(SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type Eps(EpsSEXP );
        Rcpp::traits::input_parameter< double >::type Tau(TauSEXP );
        Rcpp::traits::input_parameter< double >::type k(kSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type snp(snpSEXP );
        double __result = gamma_test(Eps, Tau, k, Y, snp);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// jag_param
List jag_param(double Eps, double Tau, double k, NumericMatrix Y, NumericVector snp);
RcppExport SEXP JAGUAR_jag_param(SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP YSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type Eps(EpsSEXP );
        Rcpp::traits::input_parameter< double >::type Tau(TauSEXP );
        Rcpp::traits::input_parameter< double >::type k(kSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type snp(snpSEXP );
        List __result = jag_param(Eps, Tau, k, Y, snp);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// getMinP
NumericVector getMinP(NumericMatrix mcMAT, List Y, NumericMatrix geno, NumericVector Eps, NumericVector Tau, double k, bool v);
RcppExport SEXP JAGUAR_getMinP(SEXP mcMATSEXP, SEXP YSEXP, SEXP genoSEXP, SEXP EpsSEXP, SEXP TauSEXP, SEXP kSEXP, SEXP vSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type mcMAT(mcMATSEXP );
        Rcpp::traits::input_parameter< List >::type Y(YSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type geno(genoSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type Eps(EpsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type Tau(TauSEXP );
        Rcpp::traits::input_parameter< double >::type k(kSEXP );
        Rcpp::traits::input_parameter< bool >::type v(vSEXP );
        NumericVector __result = getMinP(mcMAT, Y, geno, Eps, Tau, k, v);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
